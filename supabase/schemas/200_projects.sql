-- Projects Table
create table projects (
    id bigint generated by default as identity not null primary key,
    uuid uuid not null unique default uuid_generate_v4(),
    name text not null,
    organization_id bigint references organizations(id) not null,
    created_by bigint references agentsmith_users(id) not null,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

-- Indexes
create index on projects(organization_id);
create index on projects(created_by);
create index on projects(created_at);

-- RLS
alter table projects enable row level security;

-- Helper Function for RLS
create or replace function has_project_access(proj_id bigint)
returns boolean
language sql
security definer
set search_path = ''
as $$
  select exists (
    select 1 from public.projects p
    join public.organization_users ou on ou.organization_id = p.organization_id
    where p.id = proj_id
    and ou.user_id = public.agentsmith_user_id()
  );
$$;

-- Policies
create policy "Users can view projects they have access to"
    on projects for select
    to authenticated
    using (has_project_access(id));

create policy "Organization admins can create projects"
    on projects for insert
    to authenticated
    with check (is_organization_admin(organization_id));

create policy "Organization admins can update projects"
    on projects for update
    to authenticated
    using (is_organization_admin(organization_id));

create policy "Organization admins can delete projects"
    on projects for delete
    to authenticated
    using (is_organization_admin(organization_id));

-- Triggers
create trigger trigger_updated_at_projects
    before update on projects
    for each row
    execute function set_updated_at(); 