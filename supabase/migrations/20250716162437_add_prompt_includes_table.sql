create table prompt_includes (
  id bigint generated by default as identity primary key,
  prompt_version_id bigint not null references prompt_versions(id),
  included_prompt_version_id bigint not null references prompt_versions(id),
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  unique (prompt_version_id, included_prompt_version_id)
);

create index on prompt_includes(prompt_version_id);
create index on prompt_includes(included_prompt_version_id);

create trigger set_prompt_includes_updated_at
before update on prompt_includes
for each row
execute procedure set_updated_at();

alter table prompt_includes enable row level security;

-- authenticated user policies
create policy "Users can view prompt includes they have access to"
    on prompt_includes for select
    to authenticated
    using (exists (
        select 1 from prompt_versions pv
        where pv.id = prompt_includes.prompt_version_id
        and has_prompt_access(pv.prompt_id)
    ));

create policy "Users can create prompt includes they have access to"
    on prompt_includes for insert
    to authenticated
    with check (exists (
        select 1 from prompt_versions pv
        where pv.id = prompt_includes.prompt_version_id
        and has_prompt_access(pv.prompt_id)
    ));

create policy "Users can update prompt includes they have access to"
    on prompt_includes for update
    to authenticated
    using (exists (
        select 1 from prompt_versions pv
        where pv.id = prompt_includes.prompt_version_id
        and has_prompt_access(pv.prompt_id)
    ))
    with check (exists (
        select 1 from prompt_versions pv
        where pv.id = prompt_includes.prompt_version_id
        and has_prompt_access(pv.prompt_id)
    ));

create policy "Users can delete prompt includes they have access to"
    on prompt_includes for delete
    to authenticated
    using (exists (
        select 1 from prompt_versions pv
        where pv.id = prompt_includes.prompt_version_id
        and has_prompt_access(pv.prompt_id)
    ));

-- github_webhook policies
grant select on prompt_includes to github_webhook;
grant insert on prompt_includes to github_webhook;
grant update on prompt_includes to github_webhook;
grant delete on prompt_includes to github_webhook;

create policy "Allow github_webhook select access on prompt_includes"
    on public.prompt_includes
    as permissive
    for select
    to github_webhook
    using (true);

create policy "Allow github_webhook insert access on prompt_includes"
    on public.prompt_includes
    as permissive
    for insert
    to github_webhook
    with check (true);

create policy "Allow github_webhook update access on prompt_includes"
    on public.prompt_includes
    as permissive
    for update
    to github_webhook
    using (true) with check (true);

create policy "Allow github_webhook delete access on prompt_includes"
    on public.prompt_includes
    as permissive
    for delete
    to github_webhook
    using (true);
